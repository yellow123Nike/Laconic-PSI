# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.6)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6...3.21)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget oc::cryptoTools oc::tests_cryptoTools)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Create imported target oc::cryptoTools
add_library(oc::cryptoTools STATIC IMPORTED)

set_target_properties(oc::cryptoTools PROPERTIES
  INTERFACE_COMPILE_OPTIONS "\$<\$<COMPILE_LANGUAGE:CXX>:-std=c++14>;-pthread;-maes;-msse2;-msse3;-mssse3;-msse4.1;-mpclmul"
  INTERFACE_INCLUDE_DIRECTORIES "/home/ubuntu/libOTe-master/cryptoTools/cryptoTools/..;/home/ubuntu/libOTe-master/cryptoTools/cryptoTools/..;/home/ubuntu/libOTe-master/cryptoTools/thirdparty/unix/include"
  INTERFACE_LINK_LIBRARIES "relic;sodium;Boost::system;Boost::thread"
  INTERFACE_LINK_OPTIONS "-pthread"
)

# Create imported target oc::tests_cryptoTools
add_library(oc::tests_cryptoTools STATIC IMPORTED)

set_target_properties(oc::tests_cryptoTools PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/ubuntu/libOTe-master/cryptoTools/tests_cryptoTools/..;/home/ubuntu/libOTe-master/cryptoTools/tests_cryptoTools/.."
  INTERFACE_LINK_LIBRARIES "oc::cryptoTools"
)

# Import target "oc::cryptoTools" for configuration "Release"
set_property(TARGET oc::cryptoTools APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(oc::cryptoTools PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C;CXX"
  IMPORTED_LOCATION_RELEASE "/home/ubuntu/libOTe-master/cryptoTools/cryptoTools/libcryptoTools.a"
  )

# Import target "oc::tests_cryptoTools" for configuration "Release"
set_property(TARGET oc::tests_cryptoTools APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(oc::tests_cryptoTools PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "/home/ubuntu/libOTe-master/cryptoTools/tests_cryptoTools/libtests_cryptoTools.a"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
